Index: Assignmnet 1 Guess.py
===================================================================
diff --git a/Assignmnet 1 Guess.py b/Assignmnet 1 Guess.py
deleted file mode 100644
--- a/Assignmnet 1 Guess.py	(revision 5bf631aef0746f349b87848d3fb4a8b67041c030)
+++ /dev/null	(revision 5bf631aef0746f349b87848d3fb4a8b67041c030)
@@ -1,33 +0,0 @@
-
-
-product = int(input("please enter the product"))
-n = int(input("please enter the root you would like to find of the product"))
-guess = int(input("please enter your guess of the derivative given your previous root answer"))
-actualanswer = product ** (1/n)
-#doing this allows us to found the value of any root hence n
-#therefore if we want to find the second,third,fourth root, we have the user specify that
-abstol = .001
-#this is an aribtary value that we can set as the max difference there is for
-#the guess and an absolute tolerance, abstol = absolute tolerance in this case
-editedguess = guess
-#we seperated guess into 2 variables
-#the reason why seperating the initial user input & the modified input is good is because we can compare
-#the diffference between their guess to how far they were from the actual value
-while editedguess <= actualanswer:
-    #this is a while loop & continues until the condition of edited guess being less than or equal to actual answer is false
-    print (editedguess)
-    #this has the terminal print the value of the guess being modified to approach the actualansqwer variable
-    editedguess += abstol
-#this constantly compares the value of the guess with the actual derivative & once it reaches a value where the edited guess
-# is greater than the actual answer, the program stops
-print ("the product is " +str(product))
-print("your guess was " +str(guess))
-print("the actual answer is " +str(actualanswer))
-
-diff = editedguess - guess
-#this compares the how far the guess was when compared to the guess that slowly approached the actual answer
-print("your guess was "+str (diff) + " off")
-#another thing to note is that we are taking the value from the 16th decimal place so the results is more accurate
-# regarding how much the user is off; if there is to much strain running it,
-# then reduce it yourself by setting a limit on the number or something
-#this uses the same amount of ram as google for me: 1.4 gb.
Index: Assignment 1.py
===================================================================
diff --git a/Assignment 1.py b/Assignment 1.py
deleted file mode 100644
--- a/Assignment 1.py	(revision 5bf631aef0746f349b87848d3fb4a8b67041c030)
+++ /dev/null	(revision 5bf631aef0746f349b87848d3fb4a8b67041c030)
@@ -1,8 +0,0 @@
-#Assignment 1 | Finding the Fourth Root
-import math
-number = int(input("Please enter a number you would like to be returned to the fourth root "))
-number = number**0.25
-print("the fourth root of the number is " + str(number))
-
-
-
Index: Assignment 1 Testing files.py
===================================================================
diff --git a/Assignment 1 Testing files.py b/Assignment 1 Testing files.py
deleted file mode 100644
--- a/Assignment 1 Testing files.py	(revision 5bf631aef0746f349b87848d3fb4a8b67041c030)
+++ /dev/null	(revision 5bf631aef0746f349b87848d3fb4a8b67041c030)
@@ -1,5 +0,0 @@
-#wah AHHHHHHHHHHHHHHHHHHHHHHHHHHHHH
-#we'll begin by doing simple coding on deratiives && putting it into python
-import math
-
-
Index: 420 In class Assignment.py
===================================================================
diff --git a/420 In class Assignment.py b/420 In class Assignment.py
deleted file mode 100644
--- a/420 In class Assignment.py	(revision 5bf631aef0746f349b87848d3fb4a8b67041c030)
+++ /dev/null	(revision 5bf631aef0746f349b87848d3fb4a8b67041c030)
@@ -1,18 +0,0 @@
-#our y is 128
-#figure out the square root of y in comparasino to the user
-
-import math
-number = int(input("please enter your guess"))
-#user input of the guess
-Actualnumber = math.sqrt(128)
-#we have the computer store the value
-Guess = Actualnumber - number
-#we are comparing how close the guess is in comparasion to the actual guess
-
-print ("the square of 128 is " +str (Actualnumber))
-if Guess <= 10:
-    print ("your guess was close to result")
-else:
-    print ("try again, you were not as close to the guess")
-
-
Index: Bonus Assigment 1.py
===================================================================
diff --git a/Bonus Assigment 1.py b/Bonus Assigment 1.py
deleted file mode 100644
--- a/Bonus Assigment 1.py	(revision 5bf631aef0746f349b87848d3fb4a8b67041c030)
+++ /dev/null	(revision 5bf631aef0746f349b87848d3fb4a8b67041c030)
@@ -1,10 +0,0 @@
-#Assignment 1 Bonus | Taking the value of number & square value of number & dividing them again
-
-import math
-number = int(input("Please enter the product "))
-n = int(input("Please enter the base "))
-number = number ** (1/n)
-#we are multiplying it by 1/n to get the exponent and this works for any root
-print("the exponent is  " + str(number))
-
-
Index: main.py
===================================================================
diff --git a/main.py b/main.py
deleted file mode 100644
--- a/main.py	(revision 5bf631aef0746f349b87848d3fb4a8b67041c030)
+++ /dev/null	(revision 5bf631aef0746f349b87848d3fb4a8b67041c030)
@@ -1,22 +0,0 @@
-#1. I am running on Windows 10
-#2. I will be using Python
-#3. PyCharm IDE
-
-#4. We will be square rooting a valid number
-import math
-
-number = int(input("Please enter a number you would like to square root and rounded to the nearest whole number"))
-number = math.sqrt(number)
-#we are squaring the value we got from the user
-number = (math.floor(number))
-#we are rounding the number down to whole number
-
-print("the square root of the number is " + str(number))
-
-
-
-
-
-
-
-
Index: .idea/discord.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/discord.xml b/.idea/discord.xml
new file mode 100644
--- /dev/null	(date 1641495677015)
+++ b/.idea/discord.xml	(date 1641495677015)
@@ -0,0 +1,7 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="DiscordProjectSettings">
+    <option name="show" value="PROJECT" />
+    <option name="description" value="" />
+  </component>
+</project>
\ No newline at end of file
Index: .idea/wah.iml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/wah.iml b/.idea/wah.iml
new file mode 100644
--- /dev/null	(date 1641495029706)
+++ b/.idea/wah.iml	(date 1641495029706)
@@ -0,0 +1,10 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<module type="PYTHON_MODULE" version="4">
+  <component name="NewModuleRootManager">
+    <content url="file://$MODULE_DIR$">
+      <excludeFolder url="file://$MODULE_DIR$/venv" />
+    </content>
+    <orderEntry type="inheritedJdk" />
+    <orderEntry type="sourceFolder" forTests="false" />
+  </component>
+</module>
\ No newline at end of file
diff --git a/Text To speech.py b/Text To speech.py
new file mode 100644
